/*
* This code has been generated by the Rebel: a code generator for modern Java.
*
* Drop us a line or two at feedback@archetypesoftware.com: we would love to hear from you!
*/
package com.archetypesoftware.eatalian.domain.orders;

import java.util.*;
import java.time.*;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import javax.persistence.*;
import javax.validation.constraints.*;

import com.archetypesoftware.eatalian.domain.monetary.CurrencyAmount;
// ----------- << imports@AAAAAAFs1+ynKYsFAAA= >>
import java.math.BigDecimal;
// ----------- >>

@Entity
@ApiModel(description = "")
// ----------- << class.annotations@AAAAAAFs1+ynKYsFAAA= >>
// ----------- >>
public class GroupRequest extends Request {
    @OneToMany
    @JoinColumn(name = "group_id")
    // ----------- << attribute.annotations@AAAAAAFs1/zhQZbkruM= >>
    // ----------- >>
    private Set<Request> requests = new HashSet<>();

    public Set<Request> getRequests() {
        return requests;
    }

    public GroupRequest linkRequests(Request _requests) {
        if (_requests != null) {
            getRequests().add(_requests);
        }
        return this;
    }

    public GroupRequest unlinkRequests(Request _requests) {
        if (_requests != null) {
            getRequests().remove(_requests);
        }
        return this;
    }

    public GroupRequest unlinkRequests(Iterator<Request> it) {
        it.remove();
        return this;
    }

    // ----------- << equals.annotations@AAAAAAFs1+ynKYsFAAA= >>
    // ----------- >>
    @Override
    public boolean equals(Object obj) {
        if (super.equals(obj)) return true;
        if (getId() == null) return false;
        return obj instanceof GroupRequest && (getId().equals(((GroupRequest) obj).getId()));
    }

    // ----------- << hashCode.annotations@AAAAAAFs1+ynKYsFAAA= >>
    // ----------- >>
    @Override
    public int hashCode() {
        return 447;
    }

    @Override
    // ----------- << method.annotations@AAAAAAFs2EGM7RsanYM= >>
    // ----------- >>
    public CurrencyAmount getTotalPrice() {
    // ----------- << method.body@AAAAAAFs2EGM7RsanYM= >>
        return getRequests()
                .stream()
                .map(Request::getTotalPrice)
                .reduce((c1, c2) ->
                        CurrencyAmount.of(
                                c1.getAmount().add(c2.getAmount()), c1.getCurrency()))
                .orElseGet(() ->
                        CurrencyAmount.of(BigDecimal.ZERO, Currency.getInstance("USD")));
    // ----------- >>
    }
// ----------- << class.extras@AAAAAAFs1+ynKYsFAAA= >>
// ----------- >>
}