/*
* This code has been generated by the Rebel: a code generator for modern Java.
*
* Drop us a line or two at feedback@archetypesoftware.com: we would love to hear from you!
*/
package com.archetypesoftware.eatalian.domain.orders;

import java.util.*;
import java.time.*;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import javax.persistence.*;
import javax.validation.constraints.*;
import com.fasterxml.jackson.annotation.*;

import com.archetypesoftware.eatalian.domain.monetary.CurrencyAmount;
// ----------- << imports@AAAAAAFs1+wif4ratzw= >>
// ----------- >>

@Entity
@Inheritance(strategy = InheritanceType.JOINED)
@JsonTypeInfo(
        use = JsonTypeInfo.Id.NAME,
        property = "type"
)
@JsonSubTypes({
        @JsonSubTypes.Type(value = GroupRequest.class, name = "groupRequest"),
        @JsonSubTypes.Type(value = ProductRequest.class, name = "productRequest")
})
@ApiModel(description = "")
// ----------- << class.annotations@AAAAAAFs1+wif4ratzw= >>
// ----------- >>
public abstract class Request {
    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    // ----------- << id.annotations@AAAAAAFs1+wif4ratzw= >>
    // ----------- >>
    private Long id;

    @Version
    // ----------- << version.annotations@AAAAAAFs1+wif4ratzw= >>
    // ----------- >>
    private Long version;

    @Column
    // ----------- << attribute.annotations@AAAAAAFs1+04h4tXBuE= >>
    // ----------- >>
    private String note;

    @NotNull
    @ManyToOne
    @JoinColumn(name = "customerOrder_id")
    // ----------- << attribute.annotations@AAAAAAFs1+6up4uMsn8= >>
    // ----------- >>
    private Order customerOrder;

    // ----------- << getId.annotations@AAAAAAFs1+wif4ratzw= >>
    // ----------- >>
    public Long getId(){
        return id;
    }

    public String getNote() {
        return note;
    }

    public Order getCustomerOrder() {
        return customerOrder;
    }

    public Request setNote(String note) {
        this.note = note;
        return this;
    }

    public Request setCustomerOrder(Order customerOrder) {
        this.customerOrder = customerOrder;
        return this;
    }

    public Request linkCustomerOrder(Order _customerOrder) {
        if (_customerOrder != null) {
            _customerOrder.getRequests().add(this);
        }

        unlinkCustomerOrder();
        setCustomerOrder(_customerOrder);
        return this;
    }

    public Request unlinkCustomerOrder() {
        if (getCustomerOrder() != null) {
            getCustomerOrder().getRequests().remove(this);
            setCustomerOrder(null);
        }
        return this;
    }

    // ----------- << equals.annotations@AAAAAAFs1+wif4ratzw= >>
    // ----------- >>
    @Override
    public boolean equals(Object obj) {
        if (super.equals(obj)) return true;
        if (getId() == null) return false;
        return obj instanceof Request && (getId().equals(((Request) obj).getId()));
    }

    // ----------- << hashCode.annotations@AAAAAAFs1+wif4ratzw= >>
    // ----------- >>
    @Override
    public int hashCode() {
        return 228;
    }

    // ----------- << method.annotations@AAAAAAFs2D3o/xojUWM= >>
    // ----------- >>
    public abstract CurrencyAmount getTotalPrice();
// ----------- << class.extras@AAAAAAFs1+wif4ratzw= >>
// ----------- >>
}